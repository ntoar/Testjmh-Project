# JMH version: 1.21
# VM version: JDK 1.8.0_222-4-redhat, OpenJDK 64-Bit Server VM, 25.222-b10
# VM invoker: C:\Users\USUARIO\software\java-1.8.0-openjdk-1.8.0.222-4.b10.redhat.windows.x86_64\jre\bin\java.exe
# VM options: -Dfile.encoding=UTF-8
# Warmup: 10 iterations, 10 s each
# Measurement: 10 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.testjmh.maven_testjmh.MyBenchmark.testMethod

# Run progress: 0,00% complete, ETA 00:03:20
# Fork: 1 of 1
# Warmup Iteration   1: 1,317 us/op
# Warmup Iteration   2: 1,306 us/op
# Warmup Iteration   3: 1,295 us/op
# Warmup Iteration   4: 1,297 us/op
# Warmup Iteration   5: 1,294 us/op
# Warmup Iteration   6: 1,292 us/op
# Warmup Iteration   7: 1,302 us/op
# Warmup Iteration   8: 1,321 us/op
# Warmup Iteration   9: 1,300 us/op
# Warmup Iteration  10: 1,291 us/op
Iteration   1: 1,291 us/op
Iteration   2: 1,291 us/op
Iteration   3: 1,292 us/op
Iteration   4: 1,294 us/op
Iteration   5: 1,291 us/op
Iteration   6: 1,291 us/op
Iteration   7: 1,292 us/op
Iteration   8: 1,291 us/op
Iteration   9: 1,290 us/op
Iteration  10: 1,310 us/op


Result "com.testjmh.maven_testjmh.MyBenchmark.testMethod":
  1,293 ±(99.9%) 0,009 us/op [Average]
  (min, avg, max) = (1,290, 1,293, 1,310), stdev = 0,006
  CI (99.9%): [1,284, 1,303] (assumes normal distribution)


# Run complete. Total time: 00:03:20

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark               Mode  Cnt  Score   Error  Units
MyBenchmark.testMethod  avgt   10  1,293 ± 0,009  us/op
